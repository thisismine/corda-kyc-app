apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'


buildscript {
    ext.corda_version = '0.7'
    ext.corda_gradle_plugins_version = '0.7'
    ext.kotlin_version = '1.0.6'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:publish-utils:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"

       
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
    maven {
        url  "http://r3.bintray.com/corda"
    }
}

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
    test {
        resources {
            srcDir "../config/test"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Corda integration dependencies
    compile "net.corda:client:$corda_version"
    compile "net.corda:core:$corda_version"
    compile "net.corda:finance:$corda_version"
    compile "net.corda:node:$corda_version"
    compile "net.corda:corda:$corda_version"
    compile "net.corda:test-utils:$corda_version"



   
    // GraphStream: For visualisation (required by ExampleClientRPC app)
    compile "org.graphstream:gs-core:1.3"
    compile("org.graphstream:gs-ui:1.3") {
        exclude group: "bouncycastle"
    }

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['build']) {
    directory "./build/nodes"
    networkMap "Controller"
    node {
        name "Controller"
        nearestCity "London"
        advertisedServices = ["corda.notary.validating"]
        artemisPort 10002
        webPort 10003
        cordapps = []
    }
    node {
        name "ICICI"
        nearestCity "London"
        advertisedServices = []
        artemisPort 10004
        webPort 10005
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "HDFC"
        nearestCity "New York"
        advertisedServices = []
        artemisPort 10006
        webPort 10007
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "SBI"
        nearestCity "San Francisco"
        advertisedServices = []
        artemisPort 10008
        webPort 10009
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
}

// TODO: Make into gradle plugin without any references to Jython
task installJythonDeps(dependsOn: ['build']) {
    project.copy {
        from project.configurations.runtime
        into "build/jythonDeps"
    }
}

installJythonDeps.shouldRunAfter build

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

publishing {
    publications {
        jarAndSources(MavenPublication) {
            from components.java
            artifactId 'cordapp-name-goes-here'

            artifact sourceJar
            artifact javadocJar
        }
    }
}

task runExampleClientRPC(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.example.client.ExampleClientRPC'
    args 'localhost:10004'
}

